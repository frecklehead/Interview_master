{"version":3,"file":"react-here-map.esm.js","sources":["../src/components/libs/defaults.ts","../src/contexts/platform.tsx","../src/contexts/map.tsx","../src/components/libs/validateMapType.ts","../src/components/libs/initInteractionStyles.ts","../src/components/libs/buildMap.ts","../src/components/Map/Map.tsx","../src/components/libs/initMapObjectEvents.ts","../src/components/Map/objects/BaseMapObject.tsx","../src/components/Map/objects/Polyline/index.tsx","../src/components/Map/objects/Rectangle/index.tsx","../src/components/Map/objects/Polygon/index.tsx","../src/components/Map/objects/Marker/index.tsx","../src/components/Map/objects/Circle/index.tsx","../src/components/Map/objects/Layer/index.tsx","../src/components/libs/loadHMap.ts","../src/components/libs/initPlatform.ts","../src/components/Platform/index.tsx"],"sourcesContent":["/**\n * @type {string} Default version for the API\n */\nconst VERSION = 'v3/3.1';\n\nexport const mapTypes = [\n         'raster.normal.map',\n         'raster.normal.xbase',\n         'raster.normal.xbasenight',\n         'raster.normal.basen',\n         'raster.normal.basenight',\n         'raster.normal.mapnight',\n         'raster.normal.traffic',\n         'raster.normal.trafficnight',\n         'raster.normal.transit',\n         'raster.normal.panoram',\n         'raster.normal.panoramnight',\n         'raster.normal.labels',\n         'raster.normal.metaInfo',\n         'raster.satellite.xbase',\n         'raster.satellite.base',\n         'raster.satellite.map',\n         'raster.satellite.traffic',\n         'raster.satellite.panorama',\n         'raster.satellite.labels',\n         'raster.terrain.xbase',\n         'raster.terrain.base',\n         'raster.terrain.map',\n         'raster.terrain.traffic',\n         'raster.terrain.panorama',\n         'raster.terrain.labels',\n         'raster.incidents',\n         'raster.venues',\n         'vector.normal.map',\n         'vector.normal.xbase',\n         'vector.normal.xbasenight',\n         'vector.normal.basen',\n         'vector.normal.basenight',\n         'vector.normal.mapnight',\n         'vector.normal.traffic',\n         'vector.normal.trafficnight',\n         'vector.normal.transit',\n         'vector.normal.panoram',\n         'vector.normal.panoramnight',\n         'vector.normal.labels',\n         'vector.normal.metaInfo',\n         'vector.satellite.xbase',\n         'vector.satellite.base',\n         'vector.satellite.map',\n         'vector.satellite.traffic',\n         'vector.satellite.panorama',\n         'vector.satellite.labels',\n         'vector.terrain.xbase',\n         'vector.terrain.base',\n         'vector.terrain.map',\n         'vector.terrain.traffic',\n         'vector.terrain.panorama',\n         'vector.terrain.labels',\n         'vector.incidents',\n         'vector.venues',\n       ] as const;\nexport type MAP_TYPES = typeof mapTypes[number];\n\nconst MAP_TYPE: MAP_TYPES = 'vector.normal.map';\n\nconst mapOptions = {\n  zoom: 8,\n  center: {\n    lat: 6.5243793,\n    lng: 3.3792057,\n  },\n  mapType: MAP_TYPE,\n};\nconst useEvents = false;\nconst interactive = false;\nconst includeUI = false;\nconst containerId = 'HERE_MAP_CONTAINER';\n\nexport type mapEventTypes =\n  | 'pointerdown'\n  | 'pointerup'\n  | 'pointermove'\n  | 'pointerenter'\n  | 'pointerleave'\n  | 'pointercancel'\n  | 'dragstart'\n  | 'drag'\n  | 'dragend'\n  | 'tab'\n  | 'dbltap';\n\nconst defaultClassName = 'here-map-container';\n\nconst includePlaces = false;\n\n// Function that does really nothing, still it is a function, and has its right!\nconst noop = () => {};\n\nexport const mapEvents: Record<mapEventTypes, typeof noop> = {\n  pointercancel: noop,\n  drag: noop,\n  dragend: noop,\n  tab: noop,\n  dbltap: noop,\n  pointerdown: noop,\n  pointerenter: noop,\n  pointerleave: noop,\n  pointermove: noop,\n  pointerup: noop,\n  dragstart: noop,\n};\n\nexport type DefaultOptionsType = typeof defaultOptions;\n\nexport const defaultOptions = {\n  VERSION,\n  mapEvents,\n  MAP_TYPE,\n  mapTypes,\n  mapOptions,\n  interactive,\n  includeUI,\n  includePlaces,\n  useEvents,\n  containerId,\n  defaultClassName,\n  app_id: '',\n  app_code: '',\n  apikey: '',\n};\n","// provider a provider\n// provider a consumer\n\nimport { createContext } from 'react';\nimport { IHPlatformState } from '../components/Platform';\n\n// create a hook for the platform context\nexport const PlatformContext = createContext<IHPlatformState>({\n  platform: null,\n});\n","// provider a provider\n// provider a consumer\n\nimport { createContext } from 'react';\nimport { IHMapState } from '../components/Map';\n\n// create a hook for the platform context\nexport const MapContext = createContext<IHMapState>({\n  map: null,\n  ui: null,\n  interaction: null,\n});\n","import { MAP_TYPES, mapTypes } from './defaults';\n\nexport const validateMapType = (mapType: MAP_TYPES) => {\n  if (!mapTypes.includes(mapType)) {\n    throw new Error(\n      'mapType Should be one from https://developer.here.com/documentation/maps/topics/map-types.html in dot notation'\n    );\n  }\n};\n","export const initInteractionStyles = () => {\n  const style = document.createElement('style');\n  const css = `.grab = {cursor: move;cursor: grab;cursor: -moz-grab;cursor: -webkit-grab;}.grabbing{cursor:grabbing;cursor:-moz-grabbing;cursor:-webkit-grabbing}`;\n  style.type = 'text/css';\n  style.appendChild(document.createTextNode(css));\n  const head = document.head || document.getElementsByTagName('head')[0];\n  head.appendChild(style);\n};\n","// import initInteraction from './initInteraction';\n// import initDefaultUI from './initDefaultUI';\n// import initInteractionStyles from './initInteractionStyles';\n\nimport * as dotProp from 'dot-prop';\nimport {\n  DefaultOptionsType,\n  MAP_TYPES,\n  mapEventTypes,\n  mapEvents,\n} from './defaults';\nimport { IHMapOptions, IHMapOptionsMerged } from '../Map';\nimport { validateMapType } from './validateMapType';\nimport { initInteractionStyles } from './initInteractionStyles';\n\nconst initMap = (\n  container: React.RefObject<HTMLDivElement>,\n  mapLayer: any,\n  mapOptions: IHMapOptions\n): H.Map | null => {\n  // Instantiate (and display) a map object:\n  const map = container.current\n    ? new H.Map(container.current, mapLayer, mapOptions)\n    : null;\n  map?.setCenter(mapOptions.center as H.geo.Point);\n  return map;\n};\n\nexport const initInteraction = (\n  map: H.Map | null,\n  interactive: boolean,\n  useEvents: boolean,\n  events: typeof mapEvents\n): H.mapevents.Behavior | null => {\n  const behavior =\n    interactive && map\n      ? new H.mapevents.Behavior(new H.mapevents.MapEvents(map))\n      : null;\n  if (useEvents && interactive && map) {\n    for (const type in events) {\n      if (events.hasOwnProperty(type)) {\n        const callback = events[type as mapEventTypes];\n        if (callback && typeof callback === 'function') {\n          map.addEventListener(type, callback);\n        }\n      }\n    }\n  }\n  return behavior;\n};\n\nexport const initDefaultUI = (\n  platform: any,\n  map: any,\n  includeUI: boolean,\n  uiLang?: string\n) => {\n  if (!includeUI) {\n    throw new Error('includeUI must be set to true to initialize default UI');\n  }\n\n  // Create the default UI components\n  return H.ui.UI.createDefault(map, platform.createDefaultLayers(), uiLang);\n};\n\nexport interface IBuildMapResult {\n  map: H.Map | null;\n  interaction: H.mapevents.Behavior | null;\n  ui: H.ui.UI | null;\n  options?: IHMapOptionsMerged & DefaultOptionsType & { mapType: MAP_TYPES };\n}\n\nexport const buildMap = (\n  platform: any,\n  options: IHMapOptionsMerged & DefaultOptionsType\n): IBuildMapResult => {\n  // Get values from the options\n  const {\n    useEvents,\n    mapEvents,\n    interactive,\n    includeUI,\n    mapOptions,\n    uiLang,\n    container,\n    build,\n  } = options;\n\n  const retObject: IBuildMapResult = {\n    map: null,\n    interaction: null,\n    ui: null,\n    options: { ...options, mapType: mapOptions.mapType || 'vector.normal.map' },\n  };\n\n  if (container && build && retObject.options) {\n    validateMapType(retObject.options.mapType);\n    // Get all the default layers so we can set which to use based on the map type\n    const defaultLayers = platform.createDefaultLayers();\n\n    const mapLayer = dotProp.getProperty(\n      defaultLayers,\n      retObject.options.mapType\n    );\n    // Create a Map\n    retObject.map = mapLayer ? initMap(container, mapLayer, mapOptions) : null;\n    while (interactive && !retObject.interaction) {\n      retObject.interaction = initInteraction(\n        retObject.map,\n        interactive,\n        useEvents,\n        mapEvents\n      );\n      if (includeUI) {\n        retObject.ui = initDefaultUI(\n          platform,\n          retObject.map,\n          includeUI,\n          uiLang\n        );\n      }\n      // Adds the grabbing to the document\n      initInteractionStyles();\n    }\n  }\n  return retObject;\n};\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { MAP_TYPES, defaultOptions } from '../libs/defaults';\nimport { PlatformContext } from '../../contexts/platform';\nimport { MapContext } from '../../contexts/map';\nimport merge from 'lodash.merge';\nimport { IBuildMapResult, buildMap } from '../libs/buildMap';\n\nexport interface IHMapProps {\n  loadingEl?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode | React.ReactNode[];\n  options?: IHMapOptions;\n  uiLang?: string;\n  ref?: React.RefObject<HTMLDivElement> | null;\n  build?: boolean;\n  interactive?: boolean;\n  useEvents?: boolean;\n}\n\nexport type IHMapPropsRequired = Omit<\n  IHMapProps,\n  'loadingEl' | 'style' | 'children' | 'options' | 'ref'\n>;\n\nexport type IHMapOptions = H.Map.Options & {\n  mapType?: MAP_TYPES;\n};\n\nexport type IHMapOptionsMerged = IHMapPropsRequired & {\n  container: React.RefObject<HTMLDivElement> | null;\n};\n\nexport interface IHMapState extends IBuildMapResult {}\n\nexport const HMap = (props: IHMapProps) => {\n  // props.options?.center\n  // const Platform = useHPlatform()\n  const platformState = useContext(PlatformContext);\n\n  const [mapState, setMapState] = useState<IHMapState>({\n    map: null,\n    ui: null,\n    options: undefined,\n    interaction: null,\n  });\n\n  const containerRef = props.ref || useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const mergedOptions = merge(\n      {\n        container: containerRef,\n        build: true,\n      },\n      platformState.options,\n      {\n        mapOptions: {\n          ...platformState.options?.mapOptions,\n          ...props.options,\n        },\n      },\n      {\n        interactive: props.interactive,\n        useEvents: props.useEvents,\n      }\n    );\n\n    const buildResult = buildMap(platformState.platform, mergedOptions);\n\n    setMapState(buildResult);\n  }, []);\n\n  const { style, loadingEl, children } = props;\n  // const { options } = this.state.builder;\n\n  const options = {};\n\n  const LoadingComponent = () => {\n    return <div>Loading</div>;\n  };\n\n  const loading = loadingEl || <LoadingComponent />;\n\n  return (\n    // only render map provider when there is a platform state\n    platformState.platform && (\n      <MapContext.Provider value={mapState}>\n        <div\n          id={defaultOptions.containerId}\n          className={defaultOptions.defaultClassName}\n          style={style}\n          ref={containerRef}\n        >\n          {typeof H === 'undefined' && !options && loading}\n          {typeof H === 'object' && mapState.map && options && children}\n        </div>\n      </MapContext.Provider>\n    )\n  );\n};\n","import { DefaultOptionsType, mapEventTypes, mapEvents } from './defaults';\n\nexport const initMapObjectEvents = (\n  mapObject: H.map.Object,\n  objectEvents: typeof mapEvents,\n  platformOptions: Pick<DefaultOptionsType, 'useEvents' | 'interactive'>\n) => {\n  const { useEvents, interactive } = platformOptions;\n  console.log(objectEvents);\n  if (useEvents && interactive && objectEvents) {\n    for (const type in objectEvents) {\n      if (objectEvents.hasOwnProperty(type)) {\n        const callback = objectEvents[type as mapEventTypes];\n        if (callback && typeof callback === 'function') {\n          mapObject.addEventListener(type, callback);\n        }\n      }\n    }\n  }\n};\n","import { useContext, useEffect } from 'react';\nimport { MapContext } from '../../../contexts/map';\nimport { IHMapState } from '../Map';\nimport { initMapObjectEvents } from '../../libs/initMapObjectEvents';\nimport { mapEvents } from '../../libs/defaults';\n\ntype Object = H.map.Circle | H.map.Marker | H.map.Polyline | H.map.Polygon;\n\ninterface Props {\n  initializeFn: (ctx: IHMapState) => Object;\n  initializeDeps: any;\n  events: typeof mapEvents;\n  zoom?: number;\n}\n\nexport const BaseMapObject = ({\n  initializeFn,\n  initializeDeps,\n  events,\n  zoom,\n}: Props) => {\n  const mapContext = useContext(MapContext);\n  if (!mapContext.map) {\n    throw new Error('A map Object must be a child of HMap');\n  }\n\n  useEffect(() => {\n    const object = initializeFn(mapContext);\n    mapContext?.map?.getViewModel().setLookAtData({\n      bounds: object.getGeometry(),\n    });\n    mapContext.map?.setZoom(zoom || 4);\n    // Add event listener to the object if intention of using the object is defined\n    const { useEvents, interactive } = mapContext.options || {};\n    initMapObjectEvents(object, events, {\n      interactive: Boolean(interactive),\n      useEvents: Boolean(useEvents),\n    });\n    mapContext.map?.addObject(object);\n  }, [initializeDeps]);\n\n  return null;\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapPolylineProps {\n  points: H.geo.IPoint[];\n  options?: H.map.Polyline.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n}\n\nexport const HMapPolyline = (props: IHMapPolylineProps) => {\n  if (!Array.isArray(props.points)) {\n    throw new Error(\n      'points should be an array of objects containing lat and lng properties'\n    );\n  }\n  const initFn = useCallback(() => {\n    const { points, options } = props;\n    // Initialize a LineString and add all the points to it:\n    const lineString = new H.geo.LineString();\n    points.forEach(function(point) {\n      lineString.pushPoint(point);\n    });\n\n    // Initialize a polyLine with the lineString:\n    return new H.map.Polyline(lineString, options);\n  }, [props.points]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.points}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n","import React, { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\n\nexport interface IHMapRectangleProps {\n  points: number[];\n  options?: H.map.Spatial.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n}\n\nexport const HMapRectangle = (props: IHMapRectangleProps) => {\n  if (!Array.isArray(props.points)) {\n    throw new Error(\n      'points should be an array of objects containing lat and lng properties'\n    );\n  }\n  const initFn = useCallback(() => {\n    const { points, options } = props;\n    // Get a bounding box\n    const boundingBox = new H.geo.Rect(\n      points[0],\n      points[1],\n      points[2],\n      points[3]\n    );\n    // Initialize a LineString and add all the points to it:\n    return new H.map.Rect(boundingBox, options);\n  }, [props.points]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.points}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapPolygonProps {\n  points: number[] | [string];\n  options?: H.map.Polyline.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n}\n\nexport const HMapPolygon = (props: IHMapPolygonProps) => {\n  if (!Array.isArray(props.points)) {\n    throw new Error(\n      'points should be an array of objects containing lat and lng properties'\n    );\n  }\n  const initFn = useCallback(() => {\n    const { points, options } = props;\n\n    let lineString: H.geo.LineString;\n    const firstEl = points[0];\n    if (typeof firstEl === 'string' && firstEl.split(',').length === 2) {\n      lineString = new H.geo.LineString();\n      const p = points as string[];\n      p.forEach(function(coords: string) {\n        const c = coords.split(',').map(c => Number(c));\n        // c has to be lat, lng, alt\n        lineString.pushLatLngAlt.apply(lineString, [c[0], c[1], c[2]]);\n      });\n    } else {\n      lineString = new H.geo.LineString(points as number[]);\n    }\n\n    // Initialize a LineString and add all the points to it:\n    return new H.map.Polygon(lineString, options);\n  }, [props.points]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.points}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapMarkerProps {\n  coords: H.geo.IPoint;\n  options?: H.map.Marker.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n  icon?: string | HTMLImageElement | HTMLCanvasElement;\n}\n\nexport const HMapMarker = (props: IHMapMarkerProps) => {\n  if (!props.coords.lng || !props.coords.lat) {\n    throw new Error(\n      \"coords should be an object having 'lat' and 'lng' as props\"\n    );\n  }\n  const initFn = useCallback(() => {\n    const { coords, options, icon } = props;\n    const _options: H.map.Marker.Options | undefined = { ...options };\n    if (icon) _options.icon = new H.map.Icon(icon);\n    return new H.map.Marker(coords, _options);\n  }, [props.coords]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.coords}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapCircleProps {\n  coords: H.geo.IPoint;\n  options?: H.map.Circle.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n  radius: number;\n  zoom?: number;\n}\n\nexport const HMapCircle = (props: IHMapCircleProps) => {\n  const { coords, options, radius, events, zoom } = props;\n\n  if (!coords.lng || !coords.lat) {\n    throw new Error(\n      \"coords should be an object having 'lat' and 'lng' as props\"\n    );\n  }\n\n  if (!props.radius) {\n    console.info('radius is not set, default radius of 1000 is used');\n  }\n  const initFn = useCallback(() => {\n    const circle = new H.map.Circle(coords, radius || 1000, options);\n    return circle;\n  }, [coords]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={coords}\n      initializeFn={initFn}\n      events={events}\n      zoom={zoom}\n    />\n  );\n};\n","import { useContext, useEffect } from 'react';\nimport { MAP_TYPES } from '../../../libs/defaults';\nimport { MapContext } from '../../../../contexts/map';\nimport { validateMapType } from '../../../libs/validateMapType';\nimport * as dotProp from 'dot-prop';\nimport { PlatformContext } from '../../../../contexts/platform';\n\nexport interface IHMapLayerProps {\n  type: MAP_TYPES;\n}\n\nexport const HMapLayer = (props: IHMapLayerProps) => {\n  const { type } = props;\n  const mapContext = useContext(MapContext);\n  const platformContext = useContext(PlatformContext);\n  if (!mapContext.map) {\n    throw new Error('A map Object must be a child of HMap');\n  }\n  validateMapType(type);\n\n  useEffect(() => {\n    const defaultLayers = platformContext.platform?.createDefaultLayers();\n    const mapLayer = dotProp.getProperty(defaultLayers, type);\n    if (mapLayer) {\n      mapContext.map?.addLayer((mapLayer as unknown) as H.map.layer.Layer);\n    } else {\n      console.error(type, ' is not supported as a layer.');\n    }\n  }, [type]);\n\n  return null;\n};\n","import hereMapJS from '@limistah/here-map-js';\nimport { DefaultOptionsType, defaultOptions } from './defaults';\nimport merge from 'lodash.merge';\n\n// Merges the option with the defaults to create a unison and make required values available\nconst optionMerger = (options: ILoadHMapOptions) => {\n  const { appId, appCode, apiKey, ...opts } = options;\n  return merge(defaultOptions, {\n    ...opts,\n    app_id: appId,\n    app_code: appCode,\n    apikey: apiKey,\n  });\n};\n\nexport class ILoadHMapOptions {\n  version?: string; // Version of the api to load. Defaults to v3\n  interactive?: boolean; // Adds interactive scripts\n  includeUI?: boolean; // Should add the UI scripts\n  includePlaces?: boolean; // Include the places script\n  useHTTPS?: boolean;\n  useCIT?: boolean;\n  appId?: string;\n  appCode?: string;\n  apiKey?: string;\n}\n\nexport const loadHMap = async (\n  options: ILoadHMapOptions = {\n    includePlaces: false,\n    includeUI: false,\n    interactive: false,\n    version: 'v3/3.1',\n  }\n): Promise<DefaultOptionsType> => {\n  const mergedOptions = optionMerger(options);\n  const {\n    VERSION,\n    version,\n    interactive,\n    includeUI,\n    // includePlaces,\n  } = mergedOptions;\n  // Returns async loading of the component\n  // First load the core, to save us reference error if all of the libraries are loaded asynchronously due to race conditions\n  return hereMapJS({\n    includeUI,\n    includePlaces: false,\n    interactive,\n    version: version || VERSION,\n  }).then(() => mergedOptions);\n};\n","import { DefaultOptionsType } from './defaults';\n\nexport const initHPlatform = (options?: DefaultOptionsType) => {\n  const { app_id, app_code, apikey } = options || {};\n  if ((!app_id || !app_code) && !apikey) {\n    throw new Error('Options must include appId and appCode OR an apiKey');\n  }\n  // @ts-ignore\n  const h = window.H;\n  if (typeof h === 'undefined' || !h.service) {\n    throw new Error('Here Map JavaScript files are not loaded.');\n  }\n  return new h.service.Platform({ apikey: String(apikey) });\n};\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { ILoadHMapOptions, loadHMap } from '../libs/loadHMap';\nimport { initHPlatform } from '../libs/initPlatform';\nimport { DefaultOptionsType } from '../libs/defaults';\nimport { PlatformContext } from '../../contexts/platform';\n\nexport interface IHPlatform {\n  children?: React.ReactNode | React.ReactNode[];\n  options: ILoadHMapOptions;\n}\n\nexport interface IHPlatformState {\n  options?: DefaultOptionsType;\n  platform: H.service.Platform | null;\n  reInitMap?: () => void;\n}\n\nexport const HPlatform = (props: IHPlatform) => {\n  // Reload the map resources if the options changes\n  useEffect(() => {\n    loadHMap(props.options).then((options: DefaultOptionsType) => {\n      setPlatformState({\n        ...platformState,\n        options,\n      });\n    });\n  }, [props.options]);\n\n  const initilizePlatform = () => {\n    const platform = initHPlatform(platformState.options);\n    setPlatformState((prevState: IHPlatformState) => ({\n      ...prevState,\n      platform,\n    }));\n  };\n\n  const [platformState, setPlatformState] = useState<IHPlatformState>({\n    reInitMap: initilizePlatform,\n    platform: null,\n  });\n\n  useEffect(() => {\n    // initialize the platform when the js files are loaded the options are updated\n    platformState.options && initilizePlatform();\n  }, [platformState.options]);\n\n  const { platform, options } = platformState;\n\n  return (\n    <PlatformContext.Provider value={platformState}>\n      {typeof platform?.setBaseUrl == 'function' &&\n        (options?.app_code || options?.apikey) &&\n        props.children}\n    </PlatformContext.Provider>\n  );\n};\n\n// Use this to create A Here Map Platform\nexport const useHPlatform = (\n         platformOptions: ILoadHMapOptions,\n         children?: React.ReactNode | ReactNode[]\n       ) => <HPlatform options={platformOptions}>{children}</HPlatform>;\n\n"],"names":["VERSION","mapTypes","MAP_TYPE","mapOptions","zoom","center","lat","lng","mapType","useEvents","interactive","includeUI","containerId","defaultClassName","includePlaces","noop","mapEvents","pointercancel","drag","dragend","tab","dbltap","pointerdown","pointerenter","pointerleave","pointermove","pointerup","dragstart","defaultOptions","app_id","app_code","apikey","PlatformContext","createContext","platform","MapContext","map","ui","interaction","validateMapType","includes","Error","initInteractionStyles","style","document","createElement","css","type","appendChild","createTextNode","head","getElementsByTagName","initMap","container","mapLayer","current","H","Map","setCenter","initInteraction","events","behavior","mapevents","Behavior","MapEvents","hasOwnProperty","callback","addEventListener","initDefaultUI","uiLang","UI","createDefault","createDefaultLayers","buildMap","options","build","retObject","defaultLayers","dotProp","HMap","props","platformState","useContext","mapState","setMapState","useState","undefined","containerRef","ref","useRef","useEffect","mergedOptions","merge","_platformState$option","buildResult","loadingEl","children","LoadingComponent","React","loading","Provider","value","id","className","initMapObjectEvents","mapObject","objectEvents","platformOptions","console","log","BaseMapObject","_ref","initializeFn","initializeDeps","mapContext","object","_mapContext$map","getViewModel","setLookAtData","bounds","getGeometry","_mapContext$map2","setZoom","Boolean","_mapContext$map3","addObject","HMapPolyline","Array","isArray","points","initFn","useCallback","lineString","geo","LineString","forEach","point","pushPoint","Polyline","HMapRectangle","boundingBox","Rect","HMapPolygon","firstEl","split","length","p","coords","c","Number","pushLatLngAlt","apply","Polygon","HMapMarker","icon","_options","Icon","Marker","HMapCircle","radius","info","circle","Circle","HMapLayer","platformContext","_platformContext$plat","addLayer","error","optionMerger","appId","appCode","apiKey","opts","loadHMap","version","hereMapJS","then","initHPlatform","h","window","service","Platform","String","HPlatform","setPlatformState","initilizePlatform","prevState","reInitMap","setBaseUrl","useHPlatform"],"mappings":"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"}