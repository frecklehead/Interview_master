{"version":3,"file":"react-here-map.cjs.production.min.js","sources":["../src/components/libs/defaults.ts","../src/contexts/platform.tsx","../src/contexts/map.tsx","../src/components/libs/validateMapType.ts","../src/components/libs/initInteractionStyles.ts","../src/components/libs/buildMap.ts","../src/components/Map/objects/BaseMapObject.tsx","../src/components/libs/initMapObjectEvents.ts","../src/components/Platform/index.tsx","../src/components/libs/loadHMap.ts","../src/components/libs/initPlatform.ts","../src/components/Map/Map.tsx","../src/components/Map/objects/Circle/index.tsx","../src/components/Map/objects/Layer/index.tsx","../src/components/Map/objects/Marker/index.tsx","../src/components/Map/objects/Polygon/index.tsx","../src/components/Map/objects/Polyline/index.tsx","../src/components/Map/objects/Rectangle/index.tsx"],"sourcesContent":["/**\n * @type {string} Default version for the API\n */\nconst VERSION = 'v3/3.1';\n\nexport const mapTypes = [\n         'raster.normal.map',\n         'raster.normal.xbase',\n         'raster.normal.xbasenight',\n         'raster.normal.basen',\n         'raster.normal.basenight',\n         'raster.normal.mapnight',\n         'raster.normal.traffic',\n         'raster.normal.trafficnight',\n         'raster.normal.transit',\n         'raster.normal.panoram',\n         'raster.normal.panoramnight',\n         'raster.normal.labels',\n         'raster.normal.metaInfo',\n         'raster.satellite.xbase',\n         'raster.satellite.base',\n         'raster.satellite.map',\n         'raster.satellite.traffic',\n         'raster.satellite.panorama',\n         'raster.satellite.labels',\n         'raster.terrain.xbase',\n         'raster.terrain.base',\n         'raster.terrain.map',\n         'raster.terrain.traffic',\n         'raster.terrain.panorama',\n         'raster.terrain.labels',\n         'raster.incidents',\n         'raster.venues',\n         'vector.normal.map',\n         'vector.normal.xbase',\n         'vector.normal.xbasenight',\n         'vector.normal.basen',\n         'vector.normal.basenight',\n         'vector.normal.mapnight',\n         'vector.normal.traffic',\n         'vector.normal.trafficnight',\n         'vector.normal.transit',\n         'vector.normal.panoram',\n         'vector.normal.panoramnight',\n         'vector.normal.labels',\n         'vector.normal.metaInfo',\n         'vector.satellite.xbase',\n         'vector.satellite.base',\n         'vector.satellite.map',\n         'vector.satellite.traffic',\n         'vector.satellite.panorama',\n         'vector.satellite.labels',\n         'vector.terrain.xbase',\n         'vector.terrain.base',\n         'vector.terrain.map',\n         'vector.terrain.traffic',\n         'vector.terrain.panorama',\n         'vector.terrain.labels',\n         'vector.incidents',\n         'vector.venues',\n       ] as const;\nexport type MAP_TYPES = typeof mapTypes[number];\n\nconst MAP_TYPE: MAP_TYPES = 'vector.normal.map';\n\nconst mapOptions = {\n  zoom: 8,\n  center: {\n    lat: 6.5243793,\n    lng: 3.3792057,\n  },\n  mapType: MAP_TYPE,\n};\nconst useEvents = false;\nconst interactive = false;\nconst includeUI = false;\nconst containerId = 'HERE_MAP_CONTAINER';\n\nexport type mapEventTypes =\n  | 'pointerdown'\n  | 'pointerup'\n  | 'pointermove'\n  | 'pointerenter'\n  | 'pointerleave'\n  | 'pointercancel'\n  | 'dragstart'\n  | 'drag'\n  | 'dragend'\n  | 'tab'\n  | 'dbltap';\n\nconst defaultClassName = 'here-map-container';\n\nconst includePlaces = false;\n\n// Function that does really nothing, still it is a function, and has its right!\nconst noop = () => {};\n\nexport const mapEvents: Record<mapEventTypes, typeof noop> = {\n  pointercancel: noop,\n  drag: noop,\n  dragend: noop,\n  tab: noop,\n  dbltap: noop,\n  pointerdown: noop,\n  pointerenter: noop,\n  pointerleave: noop,\n  pointermove: noop,\n  pointerup: noop,\n  dragstart: noop,\n};\n\nexport type DefaultOptionsType = typeof defaultOptions;\n\nexport const defaultOptions = {\n  VERSION,\n  mapEvents,\n  MAP_TYPE,\n  mapTypes,\n  mapOptions,\n  interactive,\n  includeUI,\n  includePlaces,\n  useEvents,\n  containerId,\n  defaultClassName,\n  app_id: '',\n  app_code: '',\n  apikey: '',\n};\n","// provider a provider\n// provider a consumer\n\nimport { createContext } from 'react';\nimport { IHPlatformState } from '../components/Platform';\n\n// create a hook for the platform context\nexport const PlatformContext = createContext<IHPlatformState>({\n  platform: null,\n});\n","// provider a provider\n// provider a consumer\n\nimport { createContext } from 'react';\nimport { IHMapState } from '../components/Map';\n\n// create a hook for the platform context\nexport const MapContext = createContext<IHMapState>({\n  map: null,\n  ui: null,\n  interaction: null,\n});\n","import { MAP_TYPES, mapTypes } from './defaults';\n\nexport const validateMapType = (mapType: MAP_TYPES) => {\n  if (!mapTypes.includes(mapType)) {\n    throw new Error(\n      'mapType Should be one from https://developer.here.com/documentation/maps/topics/map-types.html in dot notation'\n    );\n  }\n};\n","export const initInteractionStyles = () => {\n  const style = document.createElement('style');\n  const css = `.grab = {cursor: move;cursor: grab;cursor: -moz-grab;cursor: -webkit-grab;}.grabbing{cursor:grabbing;cursor:-moz-grabbing;cursor:-webkit-grabbing}`;\n  style.type = 'text/css';\n  style.appendChild(document.createTextNode(css));\n  const head = document.head || document.getElementsByTagName('head')[0];\n  head.appendChild(style);\n};\n","// import initInteraction from './initInteraction';\n// import initDefaultUI from './initDefaultUI';\n// import initInteractionStyles from './initInteractionStyles';\n\nimport * as dotProp from 'dot-prop';\nimport {\n  DefaultOptionsType,\n  MAP_TYPES,\n  mapEventTypes,\n  mapEvents,\n} from './defaults';\nimport { IHMapOptions, IHMapOptionsMerged } from '../Map';\nimport { validateMapType } from './validateMapType';\nimport { initInteractionStyles } from './initInteractionStyles';\n\nconst initMap = (\n  container: React.RefObject<HTMLDivElement>,\n  mapLayer: any,\n  mapOptions: IHMapOptions\n): H.Map | null => {\n  // Instantiate (and display) a map object:\n  const map = container.current\n    ? new H.Map(container.current, mapLayer, mapOptions)\n    : null;\n  map?.setCenter(mapOptions.center as H.geo.Point);\n  return map;\n};\n\nexport const initInteraction = (\n  map: H.Map | null,\n  interactive: boolean,\n  useEvents: boolean,\n  events: typeof mapEvents\n): H.mapevents.Behavior | null => {\n  const behavior =\n    interactive && map\n      ? new H.mapevents.Behavior(new H.mapevents.MapEvents(map))\n      : null;\n  if (useEvents && interactive && map) {\n    for (const type in events) {\n      if (events.hasOwnProperty(type)) {\n        const callback = events[type as mapEventTypes];\n        if (callback && typeof callback === 'function') {\n          map.addEventListener(type, callback);\n        }\n      }\n    }\n  }\n  return behavior;\n};\n\nexport const initDefaultUI = (\n  platform: any,\n  map: any,\n  includeUI: boolean,\n  uiLang?: string\n) => {\n  if (!includeUI) {\n    throw new Error('includeUI must be set to true to initialize default UI');\n  }\n\n  // Create the default UI components\n  return H.ui.UI.createDefault(map, platform.createDefaultLayers(), uiLang);\n};\n\nexport interface IBuildMapResult {\n  map: H.Map | null;\n  interaction: H.mapevents.Behavior | null;\n  ui: H.ui.UI | null;\n  options?: IHMapOptionsMerged & DefaultOptionsType & { mapType: MAP_TYPES };\n}\n\nexport const buildMap = (\n  platform: any,\n  options: IHMapOptionsMerged & DefaultOptionsType\n): IBuildMapResult => {\n  // Get values from the options\n  const {\n    useEvents,\n    mapEvents,\n    interactive,\n    includeUI,\n    mapOptions,\n    uiLang,\n    container,\n    build,\n  } = options;\n\n  const retObject: IBuildMapResult = {\n    map: null,\n    interaction: null,\n    ui: null,\n    options: { ...options, mapType: mapOptions.mapType || 'vector.normal.map' },\n  };\n\n  if (container && build && retObject.options) {\n    validateMapType(retObject.options.mapType);\n    // Get all the default layers so we can set which to use based on the map type\n    const defaultLayers = platform.createDefaultLayers();\n\n    const mapLayer = dotProp.getProperty(\n      defaultLayers,\n      retObject.options.mapType\n    );\n    // Create a Map\n    retObject.map = mapLayer ? initMap(container, mapLayer, mapOptions) : null;\n    while (interactive && !retObject.interaction) {\n      retObject.interaction = initInteraction(\n        retObject.map,\n        interactive,\n        useEvents,\n        mapEvents\n      );\n      if (includeUI) {\n        retObject.ui = initDefaultUI(\n          platform,\n          retObject.map,\n          includeUI,\n          uiLang\n        );\n      }\n      // Adds the grabbing to the document\n      initInteractionStyles();\n    }\n  }\n  return retObject;\n};\n","import { useContext, useEffect } from 'react';\nimport { MapContext } from '../../../contexts/map';\nimport { IHMapState } from '../Map';\nimport { initMapObjectEvents } from '../../libs/initMapObjectEvents';\nimport { mapEvents } from '../../libs/defaults';\n\ntype Object = H.map.Circle | H.map.Marker | H.map.Polyline | H.map.Polygon;\n\ninterface Props {\n  initializeFn: (ctx: IHMapState) => Object;\n  initializeDeps: any;\n  events: typeof mapEvents;\n  zoom?: number;\n}\n\nexport const BaseMapObject = ({\n  initializeFn,\n  initializeDeps,\n  events,\n  zoom,\n}: Props) => {\n  const mapContext = useContext(MapContext);\n  if (!mapContext.map) {\n    throw new Error('A map Object must be a child of HMap');\n  }\n\n  useEffect(() => {\n    const object = initializeFn(mapContext);\n    mapContext?.map?.getViewModel().setLookAtData({\n      bounds: object.getGeometry(),\n    });\n    mapContext.map?.setZoom(zoom || 4);\n    // Add event listener to the object if intention of using the object is defined\n    const { useEvents, interactive } = mapContext.options || {};\n    initMapObjectEvents(object, events, {\n      interactive: Boolean(interactive),\n      useEvents: Boolean(useEvents),\n    });\n    mapContext.map?.addObject(object);\n  }, [initializeDeps]);\n\n  return null;\n};\n","import { DefaultOptionsType, mapEventTypes, mapEvents } from './defaults';\n\nexport const initMapObjectEvents = (\n  mapObject: H.map.Object,\n  objectEvents: typeof mapEvents,\n  platformOptions: Pick<DefaultOptionsType, 'useEvents' | 'interactive'>\n) => {\n  const { useEvents, interactive } = platformOptions;\n  console.log(objectEvents);\n  if (useEvents && interactive && objectEvents) {\n    for (const type in objectEvents) {\n      if (objectEvents.hasOwnProperty(type)) {\n        const callback = objectEvents[type as mapEventTypes];\n        if (callback && typeof callback === 'function') {\n          mapObject.addEventListener(type, callback);\n        }\n      }\n    }\n  }\n};\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { ILoadHMapOptions, loadHMap } from '../libs/loadHMap';\nimport { initHPlatform } from '../libs/initPlatform';\nimport { DefaultOptionsType } from '../libs/defaults';\nimport { PlatformContext } from '../../contexts/platform';\n\nexport interface IHPlatform {\n  children?: React.ReactNode | React.ReactNode[];\n  options: ILoadHMapOptions;\n}\n\nexport interface IHPlatformState {\n  options?: DefaultOptionsType;\n  platform: H.service.Platform | null;\n  reInitMap?: () => void;\n}\n\nexport const HPlatform = (props: IHPlatform) => {\n  // Reload the map resources if the options changes\n  useEffect(() => {\n    loadHMap(props.options).then((options: DefaultOptionsType) => {\n      setPlatformState({\n        ...platformState,\n        options,\n      });\n    });\n  }, [props.options]);\n\n  const initilizePlatform = () => {\n    const platform = initHPlatform(platformState.options);\n    setPlatformState((prevState: IHPlatformState) => ({\n      ...prevState,\n      platform,\n    }));\n  };\n\n  const [platformState, setPlatformState] = useState<IHPlatformState>({\n    reInitMap: initilizePlatform,\n    platform: null,\n  });\n\n  useEffect(() => {\n    // initialize the platform when the js files are loaded the options are updated\n    platformState.options && initilizePlatform();\n  }, [platformState.options]);\n\n  const { platform, options } = platformState;\n\n  return (\n    <PlatformContext.Provider value={platformState}>\n      {typeof platform?.setBaseUrl == 'function' &&\n        (options?.app_code || options?.apikey) &&\n        props.children}\n    </PlatformContext.Provider>\n  );\n};\n\n// Use this to create A Here Map Platform\nexport const useHPlatform = (\n         platformOptions: ILoadHMapOptions,\n         children?: React.ReactNode | ReactNode[]\n       ) => <HPlatform options={platformOptions}>{children}</HPlatform>;\n\n","import hereMapJS from '@limistah/here-map-js';\nimport { DefaultOptionsType, defaultOptions } from './defaults';\nimport merge from 'lodash.merge';\n\n// Merges the option with the defaults to create a unison and make required values available\nconst optionMerger = (options: ILoadHMapOptions) => {\n  const { appId, appCode, apiKey, ...opts } = options;\n  return merge(defaultOptions, {\n    ...opts,\n    app_id: appId,\n    app_code: appCode,\n    apikey: apiKey,\n  });\n};\n\nexport class ILoadHMapOptions {\n  version?: string; // Version of the api to load. Defaults to v3\n  interactive?: boolean; // Adds interactive scripts\n  includeUI?: boolean; // Should add the UI scripts\n  includePlaces?: boolean; // Include the places script\n  useHTTPS?: boolean;\n  useCIT?: boolean;\n  appId?: string;\n  appCode?: string;\n  apiKey?: string;\n}\n\nexport const loadHMap = async (\n  options: ILoadHMapOptions = {\n    includePlaces: false,\n    includeUI: false,\n    interactive: false,\n    version: 'v3/3.1',\n  }\n): Promise<DefaultOptionsType> => {\n  const mergedOptions = optionMerger(options);\n  const {\n    VERSION,\n    version,\n    interactive,\n    includeUI,\n    // includePlaces,\n  } = mergedOptions;\n  // Returns async loading of the component\n  // First load the core, to save us reference error if all of the libraries are loaded asynchronously due to race conditions\n  return hereMapJS({\n    includeUI,\n    includePlaces: false,\n    interactive,\n    version: version || VERSION,\n  }).then(() => mergedOptions);\n};\n","import { DefaultOptionsType } from './defaults';\n\nexport const initHPlatform = (options?: DefaultOptionsType) => {\n  const { app_id, app_code, apikey } = options || {};\n  if ((!app_id || !app_code) && !apikey) {\n    throw new Error('Options must include appId and appCode OR an apiKey');\n  }\n  // @ts-ignore\n  const h = window.H;\n  if (typeof h === 'undefined' || !h.service) {\n    throw new Error('Here Map JavaScript files are not loaded.');\n  }\n  return new h.service.Platform({ apikey: String(apikey) });\n};\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { MAP_TYPES, defaultOptions } from '../libs/defaults';\nimport { PlatformContext } from '../../contexts/platform';\nimport { MapContext } from '../../contexts/map';\nimport merge from 'lodash.merge';\nimport { IBuildMapResult, buildMap } from '../libs/buildMap';\n\nexport interface IHMapProps {\n  loadingEl?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode | React.ReactNode[];\n  options?: IHMapOptions;\n  uiLang?: string;\n  ref?: React.RefObject<HTMLDivElement> | null;\n  build?: boolean;\n  interactive?: boolean;\n  useEvents?: boolean;\n}\n\nexport type IHMapPropsRequired = Omit<\n  IHMapProps,\n  'loadingEl' | 'style' | 'children' | 'options' | 'ref'\n>;\n\nexport type IHMapOptions = H.Map.Options & {\n  mapType?: MAP_TYPES;\n};\n\nexport type IHMapOptionsMerged = IHMapPropsRequired & {\n  container: React.RefObject<HTMLDivElement> | null;\n};\n\nexport interface IHMapState extends IBuildMapResult {}\n\nexport const HMap = (props: IHMapProps) => {\n  // props.options?.center\n  // const Platform = useHPlatform()\n  const platformState = useContext(PlatformContext);\n\n  const [mapState, setMapState] = useState<IHMapState>({\n    map: null,\n    ui: null,\n    options: undefined,\n    interaction: null,\n  });\n\n  const containerRef = props.ref || useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const mergedOptions = merge(\n      {\n        container: containerRef,\n        build: true,\n      },\n      platformState.options,\n      {\n        mapOptions: {\n          ...platformState.options?.mapOptions,\n          ...props.options,\n        },\n      },\n      {\n        interactive: props.interactive,\n        useEvents: props.useEvents,\n      }\n    );\n\n    const buildResult = buildMap(platformState.platform, mergedOptions);\n\n    setMapState(buildResult);\n  }, []);\n\n  const { style, loadingEl, children } = props;\n  // const { options } = this.state.builder;\n\n  const options = {};\n\n  const LoadingComponent = () => {\n    return <div>Loading</div>;\n  };\n\n  const loading = loadingEl || <LoadingComponent />;\n\n  return (\n    // only render map provider when there is a platform state\n    platformState.platform && (\n      <MapContext.Provider value={mapState}>\n        <div\n          id={defaultOptions.containerId}\n          className={defaultOptions.defaultClassName}\n          style={style}\n          ref={containerRef}\n        >\n          {typeof H === 'undefined' && !options && loading}\n          {typeof H === 'object' && mapState.map && options && children}\n        </div>\n      </MapContext.Provider>\n    )\n  );\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapCircleProps {\n  coords: H.geo.IPoint;\n  options?: H.map.Circle.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n  radius: number;\n  zoom?: number;\n}\n\nexport const HMapCircle = (props: IHMapCircleProps) => {\n  const { coords, options, radius, events, zoom } = props;\n\n  if (!coords.lng || !coords.lat) {\n    throw new Error(\n      \"coords should be an object having 'lat' and 'lng' as props\"\n    );\n  }\n\n  if (!props.radius) {\n    console.info('radius is not set, default radius of 1000 is used');\n  }\n  const initFn = useCallback(() => {\n    const circle = new H.map.Circle(coords, radius || 1000, options);\n    return circle;\n  }, [coords]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={coords}\n      initializeFn={initFn}\n      events={events}\n      zoom={zoom}\n    />\n  );\n};\n","import { useContext, useEffect } from 'react';\nimport { MAP_TYPES } from '../../../libs/defaults';\nimport { MapContext } from '../../../../contexts/map';\nimport { validateMapType } from '../../../libs/validateMapType';\nimport * as dotProp from 'dot-prop';\nimport { PlatformContext } from '../../../../contexts/platform';\n\nexport interface IHMapLayerProps {\n  type: MAP_TYPES;\n}\n\nexport const HMapLayer = (props: IHMapLayerProps) => {\n  const { type } = props;\n  const mapContext = useContext(MapContext);\n  const platformContext = useContext(PlatformContext);\n  if (!mapContext.map) {\n    throw new Error('A map Object must be a child of HMap');\n  }\n  validateMapType(type);\n\n  useEffect(() => {\n    const defaultLayers = platformContext.platform?.createDefaultLayers();\n    const mapLayer = dotProp.getProperty(defaultLayers, type);\n    if (mapLayer) {\n      mapContext.map?.addLayer((mapLayer as unknown) as H.map.layer.Layer);\n    } else {\n      console.error(type, ' is not supported as a layer.');\n    }\n  }, [type]);\n\n  return null;\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapMarkerProps {\n  coords: H.geo.IPoint;\n  options?: H.map.Marker.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n  icon?: string | HTMLImageElement | HTMLCanvasElement;\n}\n\nexport const HMapMarker = (props: IHMapMarkerProps) => {\n  if (!props.coords.lng || !props.coords.lat) {\n    throw new Error(\n      \"coords should be an object having 'lat' and 'lng' as props\"\n    );\n  }\n  const initFn = useCallback(() => {\n    const { coords, options, icon } = props;\n    const _options: H.map.Marker.Options | undefined = { ...options };\n    if (icon) _options.icon = new H.map.Icon(icon);\n    return new H.map.Marker(coords, _options);\n  }, [props.coords]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.coords}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapPolygonProps {\n  points: number[] | [string];\n  options?: H.map.Polyline.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n}\n\nexport const HMapPolygon = (props: IHMapPolygonProps) => {\n  if (!Array.isArray(props.points)) {\n    throw new Error(\n      'points should be an array of objects containing lat and lng properties'\n    );\n  }\n  const initFn = useCallback(() => {\n    const { points, options } = props;\n\n    let lineString: H.geo.LineString;\n    const firstEl = points[0];\n    if (typeof firstEl === 'string' && firstEl.split(',').length === 2) {\n      lineString = new H.geo.LineString();\n      const p = points as string[];\n      p.forEach(function(coords: string) {\n        const c = coords.split(',').map(c => Number(c));\n        // c has to be lat, lng, alt\n        lineString.pushLatLngAlt.apply(lineString, [c[0], c[1], c[2]]);\n      });\n    } else {\n      lineString = new H.geo.LineString(points as number[]);\n    }\n\n    // Initialize a LineString and add all the points to it:\n    return new H.map.Polygon(lineString, options);\n  }, [props.points]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.points}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n","import { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\nimport React from 'react';\n\nexport interface IHMapPolylineProps {\n  points: H.geo.IPoint[];\n  options?: H.map.Polyline.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n}\n\nexport const HMapPolyline = (props: IHMapPolylineProps) => {\n  if (!Array.isArray(props.points)) {\n    throw new Error(\n      'points should be an array of objects containing lat and lng properties'\n    );\n  }\n  const initFn = useCallback(() => {\n    const { points, options } = props;\n    // Initialize a LineString and add all the points to it:\n    const lineString = new H.geo.LineString();\n    points.forEach(function(point) {\n      lineString.pushPoint(point);\n    });\n\n    // Initialize a polyLine with the lineString:\n    return new H.map.Polyline(lineString, options);\n  }, [props.points]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.points}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n","import React, { useCallback } from 'react';\nimport { mapEvents } from '../../../libs/defaults';\nimport { BaseMapObject } from '../BaseMapObject';\n\nexport interface IHMapRectangleProps {\n  points: number[];\n  options?: H.map.Spatial.Options;\n  setViewBounds: boolean;\n  events: typeof mapEvents;\n}\n\nexport const HMapRectangle = (props: IHMapRectangleProps) => {\n  if (!Array.isArray(props.points)) {\n    throw new Error(\n      'points should be an array of objects containing lat and lng properties'\n    );\n  }\n  const initFn = useCallback(() => {\n    const { points, options } = props;\n    // Get a bounding box\n    const boundingBox = new H.geo.Rect(\n      points[0],\n      points[1],\n      points[2],\n      points[3]\n    );\n    // Initialize a LineString and add all the points to it:\n    return new H.map.Rect(boundingBox, options);\n  }, [props.points]);\n\n  return (\n    <BaseMapObject\n      initializeDeps={props.points}\n      initializeFn={initFn}\n      events={props.events}\n    />\n  );\n};\n"],"names":["mapTypes","noop","defaultOptions","VERSION","mapEvents","pointercancel","drag","dragend","tab","dbltap","pointerdown","pointerenter","pointerleave","pointermove","pointerup","dragstart","MAP_TYPE","mapOptions","zoom","center","lat","lng","mapType","interactive","includeUI","includePlaces","useEvents","containerId","defaultClassName","app_id","app_code","apikey","PlatformContext","createContext","platform","MapContext","map","ui","interaction","validateMapType","includes","Error","initInteractionStyles","style","document","createElement","type","appendChild","createTextNode","head","getElementsByTagName","initInteraction","events","behavior","H","mapevents","Behavior","MapEvents","hasOwnProperty","callback","addEventListener","initDefaultUI","uiLang","UI","createDefault","createDefaultLayers","BaseMapObject","_ref","initializeFn","initializeDeps","mapContext","useContext","useEffect","object","_mapContext$map","getViewModel","setLookAtData","bounds","getGeometry","_mapContext$map2","setZoom","options","initMapObjectEvents","mapObject","objectEvents","platformOptions","console","log","Boolean","_mapContext$map3","addObject","HPlatform","props","async","version","mergedOptions","appId","appCode","apiKey","opts","merge","optionMerger","hereMapJS","then","loadHMap","setPlatformState","platformState","initilizePlatform","h","window","service","Platform","String","initHPlatform","prevState","useState","reInitMap","React","Provider","value","setBaseUrl","children","mapState","setMapState","undefined","containerRef","ref","useRef","container","build","_platformState$option","buildResult","buildMap","retObject","defaultLayers","mapLayer","dotProp","initMap","current","Map","setCenter","loadingEl","loading","LoadingComponent","id","className","coords","radius","info","initFn","useCallback","Circle","platformContext","_platformContext$plat","addLayer","error","icon","_options","Icon","Marker","Array","isArray","points","lineString","firstEl","split","length","geo","LineString","forEach","c","Number","pushLatLngAlt","apply","Polygon","point","pushPoint","Polyline","boundingBox","Rect","useHPlatform"],"mappings":"iQAGA,MAEaA,EAAW,CACf,oBACA,sBACA,2BACA,sBACA,0BACA,yBACA,wBACA,6BACA,wBACA,wBACA,6BACA,uBACA,yBACA,yBACA,wBACA,uBACA,2BACA,4BACA,0BACA,uBACA,sBACA,qBACA,yBACA,0BACA,wBACA,mBACA,gBACA,oBACA,sBACA,2BACA,sBACA,0BACA,yBACA,wBACA,6BACA,wBACA,wBACA,6BACA,uBACA,yBACA,yBACA,wBACA,uBACA,2BACA,4BACA,0BACA,uBACA,sBACA,qBACA,yBACA,0BACA,wBACA,mBACA,iBAqCHC,EAAOA,OAkBAC,EAAiB,CAC5BC,QAhHc,SAiHdC,UAlB2D,CAC3DC,cAAeJ,EACfK,KAAML,EACNM,QAASN,EACTO,IAAKP,EACLQ,OAAQR,EACRS,YAAaT,EACbU,aAAcV,EACdW,aAAcX,EACdY,YAAaZ,EACba,UAAWb,EACXc,UAAWd,GAQXe,SAtD0B,oBAuD1BhB,SAAAA,EACAiB,WAtDiB,CACjBC,KAAM,EACNC,OAAQ,CACNC,IAAK,UACLC,IAAK,WAEPC,QAR0B,qBAyD1BC,aA9CkB,EA+ClBC,WA9CgB,EA+ChBC,eA7BoB,EA8BpBC,WAlDgB,EAmDhBC,YAhDkB,qBAiDlBC,iBAlCuB,qBAmCvBC,OAAQ,GACRC,SAAU,GACVC,OAAQ,ICzHGC,EAAkBC,gBAA+B,CAC5DC,SAAU,OCDCC,EAAaF,gBAA0B,CAClDG,IAAK,KACLC,GAAI,KACJC,YAAa,OCRFC,EAAmBjB,IAC9B,IAAKtB,EAASwC,SAASlB,GACrB,MAAM,IAAImB,MACR,mHCLOC,EAAwBA,KACnC,MAAMC,EAAQC,SAASC,cAAc,SAErCF,EAAMG,KAAO,WACbH,EAAMI,YAAYH,SAASI,uKACdJ,SAASK,MAAQL,SAASM,qBAAqB,QAAQ,IAC/DH,YAAYJ,ICsBNQ,EAAkBA,CAC7Bf,EACAb,EACAG,EACA0B,KAEA,MAAMC,EACJ9B,GAAea,EACX,IAAIkB,EAAEC,UAAUC,SAAS,IAAIF,EAAEC,UAAUE,UAAUrB,IACnD,KACN,GAAIV,GAAaH,GAAea,EAC9B,IAAK,MAAMU,KAAQM,EACjB,GAAIA,EAAOM,eAAeZ,GAAO,CAC/B,MAAMa,EAAWP,EAAON,GACpBa,GAAgC,mBAAbA,GACrBvB,EAAIwB,iBAAiBd,EAAMa,GAKnC,OAAON,GAGIQ,EAAgBA,CAC3B3B,EACAE,EACAZ,EACAsC,KAEA,IAAKtC,EACH,MAAM,IAAIiB,MAAM,0DAIlB,OAAOa,EAAEjB,GAAG0B,GAAGC,cAAc5B,EAAKF,EAAS+B,sBAAuBH,IC/CvDI,EAAgBC,QAACC,aAC5BA,EAAYC,eACZA,EAAcjB,OACdA,EAAMlC,KACNA,GACMiD,EACN,MAAMG,EAAaC,aAAWpC,GAC9B,IAAKmC,EAAWlC,IACd,MAAM,IAAIK,MAAM,wCAkBlB,OAfA+B,YAAU,eACR,MAAMC,EAASL,EAAaE,GAC5BA,MAAAA,WAAUI,EAAVJ,EAAYlC,eAAGsC,GAAfA,EAAiBC,eAAeC,cAAc,CAC5CC,OAAQJ,EAAOK,wBAEjBC,EAAAT,EAAWlC,eAAG2C,GAAdA,EAAgBC,QAAQ9D,GAAQ,GAEhC,MAAMQ,UAAEA,EAASH,YAAEA,GAAgB+C,EAAWW,SAAW,GC/B1BC,EACjCC,EACAC,EACAC,KAEA,MAAM3D,UAAEA,EAASH,YAAEA,GAAgB8D,EAEnC,GADAC,QAAQC,IAAIH,GACR1D,GAAaH,GAAe6D,EAC9B,IAAK,MAAMtC,KAAQsC,EACjB,GAAIA,EAAa1B,eAAeZ,GAAO,CACrC,MAAMa,EAAWyB,EAAatC,GAC1Ba,GAAgC,mBAAbA,GACrBwB,EAAUvB,iBAAiBd,EAAMa,KDoBvCuB,CAAoBT,EAAQrB,EAAQ,CAClC7B,YAAaiE,QAAQjE,GACrBG,UAAW8D,QAAQ9D,aAErB+D,EAAAnB,EAAWlC,eAAGqD,GAAdA,EAAgBC,UAAUjB,IACzB,CAACJ,IAEG,MExBIsB,EAAaC,IAExBpB,YAAU,MCQYqB,eACtBZ,YAAAA,IAAAA,EAA4B,CAC1BxD,eAAe,EACfD,WAAW,EACXD,aAAa,EACbuE,QAAS,WAGX,MAAMC,EA9Bcd,CAAAA,IACpB,MAAMe,MAAEA,EAAKC,QAAEA,EAAOC,OAAEA,KAAWC,GAASlB,EAC5C,OAAOmB,EAAMlG,EAAgB,IACxBiG,EACHtE,OAAQmE,EACRlE,SAAUmE,EACVlE,OAAQmE,KAwBYG,CAAapB,IAC7B9E,QACJA,EAAO2F,QACPA,EAAOvE,YACPA,EAAWC,UACXA,GAEEuE,EAGJ,OAAOO,EAAU,CACf9E,UAAAA,EACAC,eAAe,EACfF,YAAAA,EACAuE,QAASA,GAAW3F,IACnBoG,KAAK,IAAMR,ID9BZS,CAASZ,EAAMX,SAASsB,KAAMtB,IAC5BwB,EAAiB,IACZC,EACHzB,QAAAA,OAGH,CAACW,EAAMX,UAEV,MAAM0B,EAAoBA,KACxB,MAAMzE,EE3BoB+C,CAAAA,IAC5B,MAAMpD,OAAEA,EAAMC,SAAEA,EAAQC,OAAEA,GAAWkD,GAAW,GAChD,KAAMpD,GAAWC,GAAcC,GAC7B,MAAM,IAAIU,MAAM,uDAGlB,MAAMmE,EAAIC,OAAOvD,EACjB,QAAiB,IAANsD,IAAsBA,EAAEE,QACjC,MAAM,IAAIrE,MAAM,6CAElB,OAAO,IAAImE,EAAEE,QAAQC,SAAS,CAAEhF,OAAQiF,OAAOjF,MFiB5BkF,CAAcP,EAAczB,SAC7CwB,EAAkBS,QACbA,EACHhF,SAAAA,OAIGwE,EAAeD,GAAoBU,WAA0B,CAClEC,UAAWT,EACXzE,SAAU,OAGZsC,YAAU,KAERkC,EAAczB,SAAW0B,KACxB,CAACD,EAAczB,UAElB,MAAM/C,SAAEA,EAAQ+C,QAAEA,GAAYyB,EAE9B,OACEW,gBAACrF,EAAgBsF,UAASC,MAAOb,GACC,mBAAxBxE,MAAAA,SAAAA,EAAUsF,eACfvC,MAAAA,SAAAA,EAASnD,YAAYmD,MAAAA,SAAAA,EAASlD,UAC/B6D,EAAM6B,wBGlBO7B,IAGnB,MAAMc,EAAgBnC,aAAWvC,IAE1B0F,EAAUC,GAAeR,WAAqB,CACnD/E,IAAK,KACLC,GAAI,KACJ4C,aAAS2C,EACTtF,YAAa,OAGTuF,EAAejC,EAAMkC,KAAOC,SAAuB,MACzDvD,YAAU,WACR,MAAMuB,EAAgBK,EACpB,CACE4B,UAAWH,EACXI,OAAO,GAETvB,EAAczB,QACd,CACEhE,WAAY,YACViH,EAAGxB,EAAczB,mBAAOiD,SAArBA,EAAuBjH,cACvB2E,EAAMX,UAGb,CACE1D,YAAaqE,EAAMrE,YACnBG,UAAWkE,EAAMlE,YAIfyG,ENMcC,EACtBlG,EACA+C,KAGA,MAAMvD,UACJA,EAAStB,UACTA,EAASmB,YACTA,EAAWC,UACXA,EAASP,WACTA,EAAU6C,OACVA,EAAMkE,UACNA,EAASC,MACTA,GACEhD,EAEEoD,EAA6B,CACjCjG,IAAK,KACLE,YAAa,KACbD,GAAI,KACJ4C,QAAS,IAAKA,EAAS3D,QAASL,EAAWK,SAAW,sBAGxD,GAAI0G,GAAaC,GAASI,EAAUpD,QAAS,CAC3C1C,EAAgB8F,EAAUpD,QAAQ3D,SAElC,MAAMgH,EAAgBpG,EAAS+B,sBAEzBsE,EAAWC,cACfF,EACAD,EAAUpD,QAAQ3D,SAIpB,IADA+G,EAAUjG,IAAMmG,EA1FJE,EACdT,EACAO,EACAtH,KAGA,MAAMmB,EAAM4F,EAAUU,QAClB,IAAIpF,EAAEqF,IAAIX,EAAUU,QAASH,EAAUtH,GACvC,KAEJ,OADAmB,MAAAA,GAAAA,EAAKwG,UAAU3H,EAAWE,QACnBiB,GAgFsBqG,CAAQT,EAAWO,EAAUtH,GAAc,KAC/DM,IAAgB8G,EAAU/F,aAC/B+F,EAAU/F,YAAca,EACtBkF,EAAUjG,IACVb,EACAG,EACAtB,GAEEoB,IACF6G,EAAUhG,GAAKwB,EACb3B,EACAmG,EAAUjG,IACVZ,EACAsC,IAIJpB,IAGJ,OAAO2F,GM3DeD,CAAS1B,EAAcxE,SAAU6D,GAErD4B,EAAYQ,IACX,IAEH,MAAMxF,MAAEA,EAAKkG,UAAEA,EAASpB,SAAEA,GAAa7B,EAGjCX,EAAU,GAMV6D,EAAUD,GAAaxB,gBAJJ0B,IAChB1B,4CAKT,OAEEX,EAAcxE,UACZmF,gBAAClF,EAAWmF,UAASC,MAAOG,GAC1BL,uBACE2B,GAAI9I,EAAeyB,YACnBsH,UAAW/I,EAAe0B,iBAC1Be,MAAOA,EACPmF,IAAKD,GAES,oBAANvE,IAAsB2B,GAAW6D,EAC3B,iBAANxF,GAAkBoE,EAAStF,KAAO6C,GAAWwC,wBC/EpC7B,IACzB,MAAMsD,OAAEA,EAAMjE,QAAEA,EAAOkE,OAAEA,EAAM/F,OAAEA,EAAMlC,KAAEA,GAAS0E,EAElD,IAAKsD,EAAO7H,MAAQ6H,EAAO9H,IACzB,MAAM,IAAIqB,MACR,8DAICmD,EAAMuD,QACT7D,QAAQ8D,KAAK,qDAEf,MAAMC,EAASC,cAAY,IACV,IAAIhG,EAAElB,IAAImH,OAAOL,EAAQC,GAAU,IAAMlE,GAEvD,CAACiE,IAEJ,OACE7B,gBAACnD,GACCG,eAAgB6E,EAChB9E,aAAciF,EACdjG,OAAQA,EACRlC,KAAMA,uBCzBc0E,IACxB,MAAM9C,KAAEA,GAAS8C,EACXtB,EAAaC,aAAWpC,GACxBqH,EAAkBjF,aAAWvC,GACnC,IAAKsC,EAAWlC,IACd,MAAM,IAAIK,MAAM,wCAclB,OAZAF,EAAgBO,GAEhB0B,YAAU,WACR,MAAM8D,UAAamB,EAAGD,EAAgBtH,oBAAQuH,SAAxBA,EAA0BxF,sBAC1CsE,EAAWC,cAAoBF,EAAexF,GACtC,IAAA4B,EAAV6D,UACF7D,EAAAJ,EAAWlC,eAAGsC,GAAdA,EAAgBgF,SAAUnB,GAE1BjD,QAAQqE,MAAM7G,EAAM,kCAErB,CAACA,IAEG,yBCjBkB8C,IACzB,IAAKA,EAAMsD,OAAO7H,MAAQuE,EAAMsD,OAAO9H,IACrC,MAAM,IAAIqB,MACR,8DAGJ,MAAM4G,EAASC,cAAY,KACzB,MAAMJ,OAAEA,EAAMjE,QAAEA,EAAO2E,KAAEA,GAAShE,EAC5BiE,EAA6C,IAAK5E,GAExD,OADI2E,IAAMC,EAASD,KAAO,IAAItG,EAAElB,IAAI0H,KAAKF,IAClC,IAAItG,EAAElB,IAAI2H,OAAOb,EAAQW,IAC/B,CAACjE,EAAMsD,SAEV,OACE7B,gBAACnD,GACCG,eAAgBuB,EAAMsD,OACtB9E,aAAciF,EACdjG,OAAQwC,EAAMxC,8BClBQwC,IAC1B,IAAKoE,MAAMC,QAAQrE,EAAMsE,QACvB,MAAM,IAAIzH,MACR,0EAGJ,MAAM4G,EAASC,cAAY,KACzB,MAAMY,OAAEA,EAAMjF,QAAEA,GAAYW,EAE5B,IAAIuE,EACJ,MAAMC,EAAUF,EAAO,GAcvB,MAbuB,iBAAZE,GAAsD,IAA9BA,EAAQC,MAAM,KAAKC,QACpDH,EAAa,IAAI7G,EAAEiH,IAAIC,WACbN,EACRO,SAAQ,SAASvB,GACjB,MAAMwB,EAAIxB,EAAOmB,MAAM,KAAKjI,IAAIsI,GAAKC,OAAOD,IAE5CP,EAAWS,cAAcC,MAAMV,EAAY,CAACO,EAAE,GAAIA,EAAE,GAAIA,EAAE,SAG5DP,EAAa,IAAI7G,EAAEiH,IAAIC,WAAWN,GAI7B,IAAI5G,EAAElB,IAAI0I,QAAQX,EAAYlF,IACpC,CAACW,EAAMsE,SAEV,OACE7C,gBAACnD,GACCG,eAAgBuB,EAAMsE,OACtB9F,aAAciF,EACdjG,OAAQwC,EAAMxC,+BC/BSwC,IAC3B,IAAKoE,MAAMC,QAAQrE,EAAMsE,QACvB,MAAM,IAAIzH,MACR,0EAGJ,MAAM4G,EAASC,cAAY,KACzB,MAAMY,OAAEA,EAAMjF,QAAEA,GAAYW,EAEtBuE,EAAa,IAAI7G,EAAEiH,IAAIC,WAM7B,OALAN,EAAOO,SAAQ,SAASM,GACtBZ,EAAWa,UAAUD,MAIhB,IAAIzH,EAAElB,IAAI6I,SAASd,EAAYlF,IACrC,CAACW,EAAMsE,SAEV,OACE7C,gBAACnD,GACCG,eAAgBuB,EAAMsE,OACtB9F,aAAciF,EACdjG,OAAQwC,EAAMxC,gCCvBUwC,IAC5B,IAAKoE,MAAMC,QAAQrE,EAAMsE,QACvB,MAAM,IAAIzH,MACR,0EAGJ,MAAM4G,EAASC,cAAY,KACzB,MAAMY,OAAEA,EAAMjF,QAAEA,GAAYW,EAEtBsF,EAAc,IAAI5H,EAAEiH,IAAIY,KAC5BjB,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGT,OAAO,IAAI5G,EAAElB,IAAI+I,KAAKD,EAAajG,IAClC,CAACW,EAAMsE,SAEV,OACE7C,gBAACnD,GACCG,eAAgBuB,EAAMsE,OACtB9F,aAAciF,EACdjG,OAAQwC,EAAMxC,mDTwBQgI,CACnB/F,EACAoC,IACGJ,gBAAC1B,GAAUV,QAASI,GAAkBoC"}